name: Protocol & Docs CI

on:
  push:
    branches: ['**']
    tags: ['*.*.*']

env:
  PUBLISH_DIR: docs

jobs:
  docs-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Normalize branch/tag name
        id: slug
        run: |
          RAW_REF=${GITHUB_REF##*/}
          SAFE_REF=$(echo "${RAW_REF}" | sed 's/\//-/g')
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "folder=release/${SAFE_REF}" >> $GITHUB_OUTPUT
          else
            echo "folder=branch/${SAFE_REF}" >> $GITHUB_OUTPUT
          fi
          echo "slug=${SAFE_REF}" >> $GITHUB_OUTPUT

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y libldap-dev libsasl2-dev

      - name: Setup Python + Poetry + pipx
        run: |
          pip install pipx
          pipx ensurepath
          pipx install poetry
          pipx inject poetry poetry-plugin-export
          poetry install --no-interaction

      - name: Setup Node.js + Redocly
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - run: npm i -D @redocly/cli

      - name: Generate OpenAPI & Docs
        run: |
          poetry run python manage.py openapi > ${PUBLISH_DIR}/openapi.yaml
          npx @redocly/cli build-docs -o ${PUBLISH_DIR}/index.html ${PUBLISH_DIR}/openapi.yaml

      - name: Prepare folder structure for Pages
        run: |
          mkdir -p ./publish/${{ steps.slug.outputs.folder }}
          cp -r ${PUBLISH_DIR}/* ./publish/${{ steps.slug.outputs.folder }}/

      - name: Generate simple index.html (Docs Index)
        run: bash .github/scripts/generate-index.sh

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          path: ./publish/

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
