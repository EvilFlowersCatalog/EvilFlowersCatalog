# Generated by Django 5.0.2 on 2024-04-01 16:44

import django.db.models.deletion
from django.db import migrations, models


def forwards_func(apps, schema_editor):
    EntryAuthor = apps.get_model("core", "EntryAuthor")
    Entry = apps.get_model("core", "Entry")
    db_alias = schema_editor.connection.alias

    for entry in Entry.objects.using(db_alias).all():
        authors = [entry.author]
        authors.extend(entry.contributors.all())

        entry_authors = []

        for index, author in enumerate(authors):
            entry_authors.append(EntryAuthor(entry=entry, author=author, position=index))

        EntryAuthor.objects.bulk_create(entry_authors)


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0027_touching"),
    ]

    operations = [
        migrations.CreateModel(
            name="EntryAuthor",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("position", models.PositiveSmallIntegerField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="entry_authors", to="core.author"
                    ),
                ),
                (
                    "entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="entry_authors", to="core.entry"
                    ),
                ),
            ],
            options={
                "verbose_name": "Entry author",
                "verbose_name_plural": "Entry authors",
                "db_table": "entry_authors",
                "default_permissions": (),
                "ordering": ["position"],
            },
        ),
        migrations.RunPython(forwards_func, None),
        migrations.RemoveField(
            model_name="entry",
            name="author",
        ),
        migrations.RemoveField(
            model_name="entry",
            name="contributors",
        ),
        migrations.AddField(
            model_name="entry",
            name="authors",
            field=models.ManyToManyField(related_name="entries", through="core.EntryAuthor", to="core.author"),
        ),
    ]
